cmake_minimum_required(VERSION 3.1)
project(particleMethodsBernoulli)
	set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
set(Boost_USE_STATIC_LIBS	OFF)
set(Boost_USE_MULTITHREADED	ON)
set(Boost_USE_STATIC_RUNTIME	OFF)
if(CMAKE_COMPILER_IS_GNUCC)
	add_definitions("-Wall")
endif()

if(WIN32)
	find_package(mpfr)
	find_package(mpir)
else()
	#mpfr needs to be listed as an imported target so that we can use target_link_librarie later on. If we don't have this then it just adds a -lmpfr which probably picks up the wrong thing.
	find_library(mpfr_LIBRARY mpfr)
	add_library(mpfr SHARED IMPORTED)
	set_target_properties(mpfr PROPERTIES IMPORTED_LOCATION ${mpfr_LIBRARY})
endif()

find_package(Boost 1.53.0 COMPONENTS graph REQUIRED)
find_package(maxFlowAlgorithms REQUIRED CONFIG)
find_package(Rcpp REQUIRED)

add_subdirectory(src)
add_subdirectory(copyText)
find_package(R REQUIRED)
if(WIN32)
	install(CODE "execute_process(COMMAND \"${R_COMMAND}\" CMD INSTALL --no-multiarch ./\$\{CMAKE_INSTALL_CONFIG_NAME\} WORKING_DIRECTORY ${CMAKE_BINARY_DIR})")
else()
	install(CODE "execute_process(COMMAND \"${R_COMMAND}\" CMD INSTALL . WORKING_DIRECTORY ${CMAKE_BINARY_DIR})")
endif()
